# –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –û–° ‚Äî –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –¥–∏—Å–∫–æ–≤, –ø–æ—è–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
# –°–ª–µ–∂–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
import time
import os

WATCH_DIR = "watched"

class Handler(FileSystemEventHandler):
  def on_created(self, event):
    if not event.is_directory:
      print(f"–ù–æ–≤—ã–π —Ñ–∞–π–ª: {event.src_path}")
      # –ü—Ä–∏–º–µ—Ä: –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å
      # process_file(event.src_path)

  def on_modified(self, event):
    if not event.is_directory:
      print(f"–§–∞–π–ª –∏–∑–º–µ–Ω—ë–Ω: {event.src_path}")

  def on_deleted(self, event):
    if not event.is_directory:
      print(f"–§–∞–π–ª —É–¥–∞–ª—ë–Ω: {event.src_path}")

os.makedirs(WATCH_DIR, exist_ok=True)
observer = Observer()
observer.schedule(Handler(), WATCH_DIR, recursive=True)
observer.start()

print(f"üïµÔ∏è –°–ª–µ–∂–µ–Ω–∏–µ –∑–∞: {WATCH_DIR}")
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    observer.stop()
observer.join()
