logging в Python это встроенный модуль для ведения логов, т.е. записей о работе приложения: ошибок, событий, отладочной информации и прочего.

- Замена print() в реальных проектах.
- Логи можно записывать в файл, отправлять по сети, выводить в консоль и т.д.
- Позволяет фильтровать сообщения по важности: от отладки до критических ошибок.

Простой пример:
```python
import logging

logging.basicConfig(level=logging.INFO)

logging.debug("Это отладочное сообщение")
logging.info("Просто информация")
logging.warning("Что-то пошло не так")
logging.error("Ошибка!")
logging.critical("Система упала!")
```
Уровни логов:
| Уровень    | Что значит                        |
|------------|-----------------------------------|
| DEBUG      | Подробная отладка                 |
| INFO       | Обычные сообщения                 |
| WARNING    | Предупреждение                    |
| ERROR      | Ошибка, но приложение живо        |
| CRITICAL   | Критическая ошибка, все плохо     |

Запись логов в файл:
```python
logging.basicConfig(
    filename="app.log",
    filemode="w",  # или "a" — дозапись
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)
```
Что еще умеет:
- Разные логгеры для разных частей приложения
- Форматирование сообщений
- Фильтры и обработчики (handlers) — можно отправлять лог в Telegram, Elastic, файл, stdout и т.д.

